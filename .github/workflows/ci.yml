name: CICD_Pipeline

env:
  EB_APPLICATION: "nodeapp"
  EB_ENVIRONMENT: "nodeapp-env"
  EB_DEPLOY_ARTIFACT_S3_BUCKET: "artifacts-339804037344"
  AWS_REGION: "eu-north-1"
  EB_VERSION: "Version-${{ github.sha }}"
  EB_DESCRIPTION: "CommitSHA-${{ github.sha }}"
  DEPLOY_ARTIFACT: "nodeapp-${{ github.sha }}.zip"

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

jobs:

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Git clone repo
#        uses: actions/checkout@v4
#
#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '21'
#
#      - name: Install dependencies
#        run: npm ci

#      - name: Run tests
#        run: npm run test
#        env:
#          CI: true

  build:
    runs-on: ubuntu-latest
#    needs: [test]
    steps:
      - name: Git clone repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '17'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Create zip deployment artifact
#        run: zip -r ${{ env.DEPLOY_ARTIFACT }} server package.json package-lock.json
        run: zip -r ${{ env.DEPLOY_ARTIFACT }} server package.json package-lock.json Procfile product-management-frontend -x ".idea/*" ".vagrant/*" "product-management-frontend/node_modules/*" "*.git*" "node_modules/*"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Push deploy artifact to S3
        run: aws s3 cp ${{ env.DEPLOY_ARTIFACT }} s3://${{ env.EB_DEPLOY_ARTIFACT_S3_BUCKET }}/

  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create new Elastic Beanstalk application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "${{ env.EB_APPLICATION }}" \
            --source-bundle S3Bucket="${{ env.EB_DEPLOY_ARTIFACT_S3_BUCKET }}",S3Key="${{ env.DEPLOY_ARTIFACT }}" \
            --version-label "${{ env.EB_VERSION }}" \
            --description "${{ env.EB_DESCRIPTION }}"

      - name: Deploy artifact to Elastic Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name "${{ env.EB_ENVIRONMENT }}" \
            --version-label "${{ env.EB_VERSION }}"

#
      - name: Wait for deployment to complete
        run: |
          aws elasticbeanstalk wait environment-updated \
            --environment-name "${{ env.EB_ENVIRONMENT }}"

#      - name: Clean up
#        run: |
#          aws s3 rm s3://${{ env.EB_DEPLOY_ARTIFACT_S3_BUCKET }}/${{ env.DEPLOY_ARTIFACT }}
